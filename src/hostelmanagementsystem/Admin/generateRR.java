/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hostelmanagementsystem.Admin;

import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.print.PageFormat;
import java.awt.print.Printable;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.io.FileNotFoundException;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.RowSorter;
import javax.swing.SortOrder;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Daniel
 */
public class generateRR extends javax.swing.JFrame {

    /**
     * Creates new form generateRR
     */
    ImageIcon wi = new ImageIcon("thelogo.jpg");
    private UserSession userSession;
    
    public generateRR(UserSession userSession) {
        
        //Define User Session
        this.userSession = userSession;

        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);

        // Window itself
        this.setTitle("Generate Room Report | XYZ Hostel Management");
        this.setSize(1200, 700);

        //Window itself
        this.setIconImage(wi.getImage());

        // Window when close
        this.setDefaultCloseOperation(LandingPage.EXIT_ON_CLOSE);
        this.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblMonthlyReport = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        roomsTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        btnGenerateRR = new javax.swing.JButton();
        btnViewAllRoomInfoRR = new javax.swing.JButton();
        btnClearRR = new javax.swing.JButton();
        btnResetRR = new javax.swing.JButton();
        btnSearchRR = new javax.swing.JButton();
        txtRoomNoRR = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        btnSortingTableDataRR = new javax.swing.JButton();
        btnBackCRUD = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(199, 213, 224));
        jPanel1.setMinimumSize(new java.awt.Dimension(1200, 700));
        jPanel1.setName(""); // NOI18N
        jPanel1.setPreferredSize(new java.awt.Dimension(1200, 700));
        jPanel1.setLayout(null);

        lblMonthlyReport.setFont(new java.awt.Font("Kanit SemiBold", 0, 60)); // NOI18N
        lblMonthlyReport.setForeground(new java.awt.Color(42, 71, 94));
        lblMonthlyReport.setText("Room Report");
        lblMonthlyReport.setName("AdminHRI"); // NOI18N
        jPanel1.add(lblMonthlyReport);
        lblMonthlyReport.setBounds(740, 60, 370, 60);

        roomsTable.setFont(new java.awt.Font("Dubai", 1, 18)); // NOI18N
        roomsTable.setForeground(new java.awt.Color(27, 40, 56));
        roomsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Room No.", "Room Type", "Room Status", "Capacity", "Room Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        roomsTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        roomsTable.setEnabled(false);
        roomsTable.setRowHeight(30);
        roomsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                roomsTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(roomsTable);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(30, 100, 630, 510);

        jPanel2.setBackground(new java.awt.Color(147, 160, 169));

        btnGenerateRR.setFont(new java.awt.Font("Kanit Medium", 2, 18)); // NOI18N
        btnGenerateRR.setText("Generate Room Report");
        btnGenerateRR.setToolTipText("Once you click it, you will see a dropdown arrow on roomsTable.");
        btnGenerateRR.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnGenerateRR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateRRActionPerformed(evt);
            }
        });

        btnViewAllRoomInfoRR.setFont(new java.awt.Font("Kanit Medium", 2, 18)); // NOI18N
        btnViewAllRoomInfoRR.setText("View Available Rooms ");
        btnViewAllRoomInfoRR.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnViewAllRoomInfoRR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewAllRoomInfoRRActionPerformed(evt);
            }
        });

        btnClearRR.setFont(new java.awt.Font("Kanit Medium", 2, 18)); // NOI18N
        btnClearRR.setText("Clear");
        btnClearRR.setToolTipText("Only For Room Info.");
        btnClearRR.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnClearRR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearRRActionPerformed(evt);
            }
        });

        btnResetRR.setFont(new java.awt.Font("Kanit Medium", 2, 18)); // NOI18N
        btnResetRR.setText("Reset");
        btnResetRR.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnResetRR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetRRActionPerformed(evt);
            }
        });

        btnSearchRR.setFont(new java.awt.Font("Kanit Medium", 2, 18)); // NOI18N
        btnSearchRR.setText("Search");
        btnSearchRR.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSearchRR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchRRActionPerformed(evt);
            }
        });

        txtRoomNoRR.setFont(new java.awt.Font("Dubai", 1, 18)); // NOI18N
        txtRoomNoRR.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtRoomNoRR.setMinimumSize(new java.awt.Dimension(1020, 855));
        txtRoomNoRR.setPreferredSize(new java.awt.Dimension(1020, 855));
        txtRoomNoRR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRoomNoRRActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Dubai", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Room No:");

        btnSortingTableDataRR.setFont(new java.awt.Font("Kanit Medium", 2, 18)); // NOI18N
        btnSortingTableDataRR.setText("Sort Hostel Room Table Data");
        btnSortingTableDataRR.setToolTipText("Once you click it, you will see a dropdown arrow on roomsTable.");
        btnSortingTableDataRR.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSortingTableDataRR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSortingTableDataRRActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(33, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSortingTableDataRR, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(btnResetRR, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(btnClearRR, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(btnSearchRR, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnViewAllRoomInfoRR, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnGenerateRR, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(txtRoomNoRR, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(58, 58, 58))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtRoomNoRR, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnResetRR, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClearRR, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearchRR, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addComponent(btnViewAllRoomInfoRR, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(btnSortingTableDataRR, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(btnGenerateRR, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2);
        jPanel2.setBounds(700, 140, 450, 480);

        btnBackCRUD.setFont(new java.awt.Font("Kanit Medium", 2, 18)); // NOI18N
        btnBackCRUD.setText("Back");
        btnBackCRUD.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBackCRUD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackCRUDActionPerformed(evt);
            }
        });
        jPanel1.add(btnBackCRUD);
        btnBackCRUD.setBounds(30, 30, 130, 40);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 1210, 700);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void roomsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_roomsTableMouseClicked

    }//GEN-LAST:event_roomsTableMouseClicked

    private void txtRoomNoRRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRoomNoRRActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRoomNoRRActionPerformed

    private void btnResetRRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetRRActionPerformed
        // The Room Table
        DefaultTableModel model = (DefaultTableModel) roomsTable.getModel();
        model.setRowCount(0);

        // CRUD side
        txtRoomNoRR.setText("");
    }//GEN-LAST:event_btnResetRRActionPerformed

    private void btnClearRRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearRRActionPerformed
        // CRUD side
        txtRoomNoRR.setText("");
    }//GEN-LAST:event_btnClearRRActionPerformed

    private void btnSearchRRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchRRActionPerformed
        try {
            String roomNo = txtRoomNoRR.getText().trim().toUpperCase();
            if (roomNo.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please input hostel room number.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            boolean roomFound = display(roomNo);
            if (roomFound) {
                JOptionPane.showMessageDialog(this, "Room found.", "Success", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Hostel room number not found. Please try again.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(generateRR.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSearchRRActionPerformed

    public boolean display(String roomNo) throws FileNotFoundException {
        DefaultTableModel model = (DefaultTableModel) roomsTable.getModel();
        model.setRowCount(0);

        handleFiles file = new handleFiles("room.txt");
        Object[] fileData = file.reader();

        boolean roomFound = false;

        for (var i = 0; i < fileData.length; i++) {
            String line = fileData[i].toString().trim();
            String[] dataRow = line.split(", ");
            if (i == 0) {
                model.setColumnIdentifiers(dataRow);
            } else if (dataRow[0].equals(roomNo)) {
                model.addRow(dataRow);
                roomFound = true;
            }
        }

        return roomFound;
    }

    private void btnViewAllRoomInfoRRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewAllRoomInfoRRActionPerformed
        try {
            DefaultTableModel model = (DefaultTableModel) roomsTable.getModel();
            model.setRowCount(0);
            handleFiles file = new handleFiles("room.txt");
            Object[] fileData = file.reader();

            for (int i = 0; i < fileData.length; i++) {
                String line = fileData[i].toString().trim();
                String[] dataRow = line.split(", ");

                // Check if the room status is "Available"
                if (i > 0 && dataRow.length == 5 && dataRow[3].equalsIgnoreCase("Available")) {
                    model.addRow(dataRow);
                }
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(AdminHRI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnViewAllRoomInfoRRActionPerformed

    private void btnGenerateRRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateRRActionPerformed
        PrinterJob job = PrinterJob.getPrinterJob();
        job.setJobName("Print Data");

        job.setPrintable(new Printable() {
            @Override
            public int print(Graphics pg, PageFormat pf, int pageNum) {
                pf.setOrientation(PageFormat.LANDSCAPE);
                if (pageNum > 0) {
                    return Printable.NO_SUCH_PAGE;
                }

                Graphics2D g2 = (Graphics2D) pg;
                g2.translate(pf.getImageableX(), pf.getImageableY());
                g2.scale(0.24, 0.24);

                jPanel1.paint(g2);

                return Printable.PAGE_EXISTS;

            }
        });

        if (JOptionPane.showConfirmDialog(null, "Are you sure you want to print?", "Print Confirmation", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            boolean ok = job.printDialog();
            if (ok) {
                try {
                    job.print();
                } catch (PrinterException ex) {
                    JOptionPane.showMessageDialog(null, "Error printing report: " + ex.getMessage(), "Print Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Printing cancelled", "Print Cancelled", JOptionPane.INFORMATION_MESSAGE);
        }

        // Generate Text Format of Room Report (Number of available rooms)
        // Get the table model from roomsTable
        DefaultTableModel model = (DefaultTableModel) roomsTable.getModel();

        // Create a StringBuilder to store the table data
        StringBuilder tableData = new StringBuilder();

        // Append column names
        for (int column = 0; column < model.getColumnCount(); column++) {
            tableData.append(model.getColumnName(column));
            if (column < model.getColumnCount() - 1) {
                tableData.append(", ");
            }
        }
        tableData.append(System.lineSeparator());

        // Append row data
        for (int row = 0; row < model.getRowCount(); row++) {
            for (int column = 0; column < model.getColumnCount(); column++) {
                tableData.append(model.getValueAt(row, column));
                if (column < model.getColumnCount() - 1) {
                    tableData.append(", ");
                }
            }
            tableData.append(System.lineSeparator());
        }
    // Generate the report using the RoomReportGenerator class
    RoomReportGenerator roomReportGenerator = new RoomReportGenerator();
    roomReportGenerator.generateReport(tableData.toString(), "ReportNoRA");


    }//GEN-LAST:event_btnGenerateRRActionPerformed

    private void btnBackCRUDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackCRUDActionPerformed
        AdminGenerateReports agg = new AdminGenerateReports(userSession);
        agg.setLocationRelativeTo(null);
        agg.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnBackCRUDActionPerformed

    private void btnSortingTableDataRRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSortingTableDataRRActionPerformed
        DefaultTableModel model = (DefaultTableModel) roomsTable.getModel();
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model);
        roomsTable.setRowSorter(sorter);
        sorter.setSortKeys(Arrays.asList(new RowSorter.SortKey(0, SortOrder.ASCENDING)));
    }//GEN-LAST:event_btnSortingTableDataRRActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(generateRR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(generateRR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(generateRR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(generateRR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                UserSession userSession = new UserSession("admin"); // Create UserSession instance with username
                new generateRR(userSession).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBackCRUD;
    private javax.swing.JButton btnClearRR;
    private javax.swing.JButton btnGenerateRR;
    private javax.swing.JButton btnResetRR;
    private javax.swing.JButton btnSearchRR;
    private javax.swing.JButton btnSortingTableDataRR;
    private javax.swing.JButton btnViewAllRoomInfoRR;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblMonthlyReport;
    private javax.swing.JTable roomsTable;
    private javax.swing.JTextField txtRoomNoRR;
    // End of variables declaration//GEN-END:variables
}
